# oh my zsh display ssh user name and server hostname
# export PROMPT="$fg[cyan]%}$USER@%{$fg[blue]%}%m ${ret_status} %{$fg[cyan]%}%c%{$reset_color%} $(git_prompt_info)";

# export PROMPT='%{$fg[cyan]%}%c%{$reset_color%} $(git_prompt_info)'

# ip alias
ipalias() {
    sudo ifconfig en0 alias 172.16.123.1
}
ipalias

ip=`ifconfig | grep -o -m 2 -E "\d+\.\d+\.\d+\.\d+" | sed -n 2p`

alias yt='docker run -e "http_proxy=http://$ip:1087" -e "https_proxy=http://$ip:1087" --rm -v $PWD:/data vimagick/youtube-dl'
alias youget='docker run --rm -v $PWD:/downloads ondrejmo/you-get'
alias lessc='docker run -it --rm -v $(pwd):$(pwd) -w $(pwd) ewoutp/lessc '
alias sassc='docker run --rm -v $(pwd):/data codycraven/sassc '
alias cling='docker run --rm -v `pwd`:/code -it maddouri/cling-ubuntu-docker_auto'
alias yarn='docker run -it --rm -v `pwd`:/data digitallyseamless/nodejs-bower-grunt yarn'
alias bower='docker run -it --rm -v `pwd`:/data digitallyseamless/nodejs-bower-grunt bower'
alias grunt='docker run -it --rm -v `pwd`:/data digitallyseamless/nodejs-bower-grunt grunt'
#alias npm='docker run --name=npm -it --rm -v ~/npm/node_modules:/usr/local/lib/node_modules -v $PWD:/data digitallyseamless/nodejs-bower-grunt npm --registry=https://registry.npm.taobao.org '
alias composer='docker run --rm --interactive --tty --volume $PWD:/app --volume ~/composer:/tmp composer'
alias gulp='docker run --rm -it -v `pwd`:/workspace monostream/nodejs-gulp-bower gulp'
alias cheat='docker run  --rm suxiaolin1993/cheat'
alias dr2='docker run --rm -it -v $PWD:/home/r2 -v ~/.config/radare2/.radare2rc:/home/r2/.radare2rc radare/radare2 r2'
alias httpserver='docker run -d -p 82:8080 --name=httpserver --rm -v $PWD:/data visualjeff/simple-http-server:0.0.1'
alias sass='docker run -it --rm -v $(pwd):$(pwd) -w $(pwd) jbergknoff/sass'
alias webpack='docker run --rm -i -t -v $PWD:/app jmfirth/webpack webpack'
alias phpunit='docker run -v $(pwd):/app --rm phpunit/phpunit'
alias phpunit5='docker run -v $(pwd):/app --rm phpunit/phpunit:5.7.12'
alias phpunit4='docker run -v $(pwd):/app --rm phpunit/phpunit:4.8.5'
alias deepo='docker run --rm -it -v ~/deepo/data:/data -v ~/deepo/config:/config ufoym/deepo:all-py27-cpu bash'
alias youget='docker run -e "http_proxy=http://$ip:1087" -e "https_proxy=http://$ip:1087" --rm kmdgeek/you-get'
alias phpformat='docker run -it --rm -v $(pwd):/project -w /project jakzal/phpqa:alpine php-cs-fixer fix --dry-run --rules=@PSR2 '
alias box='docker run -it --rm -v $(pwd):/project -w /project jakzal/phpqa:alpine box '
alias gore='docker run --rm --name gore -it gore sh'
alias ansible='docker run --rm --name gore -it williamyeh/ansible:alpine3 ansible '

# for anybar
function anybar { echo -n $1 | nc -4u -w0 localhost ${2:-1738}; }

proxy() {
    export http_proxy=http://127.0.0.1:1087;
    export https_proxy=http://127.0.0.1:1087;
    echo "已开启代理"
}

# go development enviroment
goup() {
    GOPATH=~/gopath
    docker run -it --rm \
    --volume $GOPATH/src:/go/src \
    --workdir /go/src \
    deis/go-dev:latest \
    bash
}

# laradocker start down restart
dup() {
    #cd ~/Sites/laradock && docker-compose up -d nginx mysql mysql-slave redis mongo php-worker
    cd ~/Sites/laradock && docker-compose up -d nginx redis php-worker mysql jenkins gitlab maildev rabbitmq
    cd -
}

ddown() {
    cd ~/Sites/laradock && docker-compose down
    cd -
}

drestart() {
    ddown;
    dup;
}

mmaster() {
    mysqlsh --sql -h127.0.0.1 -uroot -proot
}
mslave() {
    mysqlsh --sql -h127.0.0.1 -P3307 -uroot -proot
}
dredis() {
    docker exec -it laradock_redis_1 redis-cli
}
# laradocker start down restart end

# percona tools start
percona-tools() {
    docker run --rm -it brunoric/percona-toolkit $@;
}
# percona tools end

# openresty
oup() {
    docker run --rm --name openresty -d -p 8877:80 -v ~/Documents/Docker/openresty/conf.d:/etc/nginx/conf.d -v ~/Documents/Docker/openresty/html:/usr/local/openresty/nginx/html -v ~/Documents/Docker/openresty/log:/var/log/nginx/  openresty/openresty:alpine
}

oin() {
    docker exec -it -w /etc/nginx openresty sh
}

odown() {
    docker stop openresty
}

orestart() {
    odown;
    oup;
}

osh() {
    docker exec -it -w /etc/nginx openresty sh
}
# openresty end

# nsq start
nsqup() {
    cd ~/Documents/Docker/nsq && docker-compose up -d
    cd -
}

nsqdown() {
    cd ~/Documents/Docker/nsq && docker-compose down
    cd -
}

nsqstart() {
    nsqdown;
    nsqup;
}
# nsq end

findphp() {
    ag --php -i -U -Q "$@"
}

noproxy() {
    unset http_proxy
    unset https_proxy
    echo "已关闭代理"
}

if [[ $OSTYPE == darwin* ]];then
    export PATH=~:~/develop/maven/bin:~/develop/maven/bin:~/Applications/vim8/bin:~/Applications/nasm:~/Applications/r2/bin:/data/php/bin:$(brew --prefix php@7.1)/bin:~/develop/node/bin:~/aspectj1.9/bin:$PATH
    export PATH=$PATH:~/
    export R2PM_DBDIR=/Users/suxiaolin/Applications/r2pm
else
fi;

mrun() {
    port="-Dserver.port=$1"
    env="-Denv=local"
    memory="-Xms64m -Xmx128m"
    yourkit="-agentpath:/Applications/YourKit-Java-Profiler-2018.04.app/Contents/Resources/bin/mac/libyjpagent.jnilib"
    xrebel="-javaagent:/Users/suxiaolin/develop/xrebel/xrebel.jar"
    command="mvn spring-boot:run -Dspring-boot.run.jvmArguments=\"$memory $env $port $yourkit $xrebel\""
    echo "command: $command"
    sh -c $command
}

brun() {
    port="8080"
    if [ $1 = "order" ]
    then
        port=8035
    elif [ $1 = "shopdevice" ]
    then
        port=8035
    elif [ $1 = "sass" ]
    then
        port=8037
    elif [ $1 = "app" ]
    then
        port=8039
    elif [ $1 = "gateway" ]
    then
        port=8040
    elif [ $1 = "push" ]
    then
        port=8041
    elif [ $1 = "organization" ]
    then
        port=8045
    fi
    mrun $port
}

mntfs() {
    deviceNode=`diskutil info /Volumes/$1 | grep -oh "/dev/.*"`
    hdiutil eject "/Volumes/$1"
    sudo mkdir /Volumes/$1
    sudo mount_ntfs -o rw,nobrowse /dev/$deviceNode /Volumes/$1/
}

dattr() {
    xattr -l $1
    xattr -d com.apple.FinderInfo $1
}

jr() {
    javac $1
    java "${1%.*}"
}
